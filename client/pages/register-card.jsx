import { useEffect, useRef, useState } from "react";
import Head from "next/head";
import axios from "axios";
import useSWR from "swr";
import toast from "react-hot-toast";

import Dashboard from "@/components/Dashboard";

export default function RegisterCard() {
  const [students, setStudents] = useState([]);
  const [cardData, setCardData] = useState("");
  const [studentData, setStudentData] = useState(null);
  const fetchStatus = useRef(false);

  const fetcher = (url) => fetch(url).then((res) => res.json());

  const { data, error } = useSWR(
    "http://localhost:3001/api/card/get-temp",
    fetcher,
    { refreshInterval: 1000 }
  );

  useEffect(() => {
    if (fetchStatus.current) return;

    toast.promise(
      axios
        .get("http://localhost:3001/api/student/available")
        .then((res) => setStudents(res.data.data)),
      {
        loading: "Loading",
        success: "Data mahasiswa berhasil diambil",
        error: (err) => err?.message ?? "Terjadi kesalahan saat mengambil data",
      }
    );

    fetchStatus.current = true;
  }, []);

  useEffect(() => {
    if (data?.data ?? "" != cardData) {
      setCardData(data?.data);
      toast.success("Kode kartu berhasil diperbarui");
    }
  }, [data]);

  const handlePairing = () => {
    if (!cardData || !cardData?.code || !studentData) {
      toast.error("Data tidak boleh kosong!");
      return;
    }

    const nim = studentData.split(" - ")[0];

    const data = {
      nim,
      cardId: cardData.code,
    };

    toast.promise(axios.post("http://localhost:3001/api/card/pair", data), {
      loading: "Loading",
      success: "Mahasiswa dan kartu berhasil dihubungkan",
      error: (err) => err?.message ?? "Terjadi kesalahan",
    });
  };

  return (
    <>
      <Head>
        <title>Registrasi Kartu Baru</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Dashboard title='Registrasi Kartu Baru'>
        <main>
          <h3 className='mb-4 text-2xl font-normal'>Kartu aktif saat ini</h3>
          {error ? (
            <>
              <p className='text-red-500'>Terjadi kesalahan...</p>
              <p>Keterangan: {error?.message}</p>
            </>
          ) : data ? (
            <>
              <p className='mb-4 text-5xl font-bold '>
                {cardData?.code}
                {cardData?.name && (
                  <span className='text-2xl font-semibold'>{` (${cardData?.name})`}</span>
                )}
              </p>

              <span
                className={`${
                  cardData?.isRegistered ? "bg-red-600" : "bg-green-600"
                } text-lg mt-4 font-semibold tracking-wide text-white px-6 py-1 rounded-2xl`}
              >
                {cardData?.isRegistered ? "Sudah terdaftar" : "Belum terdaftar"}
              </span>
            </>
          ) : (
            <div className='flex items-center justify-center h-24 bg-gray-200 rounded-md animate-pulse'>
              <div className='text-xl font-normal'>Loading...</div>
            </div>
          )}

          <div className='mt-8'>
            <label
              htmlFor='pairing'
              className='block text-sm font-medium text-gray-700'
            >
              Pasangkan dengan mahasiswa
            </label>
            <select
              id='pairing'
              name='pairing'
              className='block w-full py-2 pl-3 pr-10 mt-1 text-base border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'
              defaultValue=''
              onChange={(e) => setStudentData(e.target.value)}
            >
              <option value=''>{"Pilih Mahasiswa (NIM - Nama)"}</option>
              {students.map((student) => (
                <option
                  key={student.nim}
                >{`${student.nim} - ${student.name}`}</option>
              ))}
            </select>
          </div>

          <button
            type='button'
            onClick={handlePairing}
            className='inline-flex items-center px-4 py-2 mt-5 text-sm font-medium text-white border border-transparent rounded-md shadow-sm bg-primary hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700'
          >
            Pasangkan
          </button>
        </main>
      </Dashboard>
    </>
  );
}
